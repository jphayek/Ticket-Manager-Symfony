security:
    encoders:
        Symfony\Component\Security\Core\User\User: plaintext
        App\Entity\User:
            algorithm: bcrypt

    providers:
        in_memory:
            memory:
                users:
                    jp@user.com:
                        password: jpuser{U+7bLor2/K7sVvUanixaDStOAfcsCKQyDoHOtfnK}
                        roles: 'ROLE_USER'
                    admin@admin.com:
                        password: $2a$12$cyTWeE9kpq1PjqKFiWUZFuCRPwVyAZwm4XzMZ1qPUFl7/flCM3V0G
                        roles: 'ROLE_ADMIN'
        my_provider:
            entity:
                class: App\Entity\User
                property: username 
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true

            form_login:
                login_path: login
                check_path: login
                provider: my_provider

            logout:
                path: /logout
                target: /
    
    role_hierarchy:
         ROLE_ADMIN: [ ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH ]
            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
    # require ROLE_ADMIN for /admin*
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }

        - { path: ^/ticket, roles: IS_AUTHENTICATED_FULLY }
        
